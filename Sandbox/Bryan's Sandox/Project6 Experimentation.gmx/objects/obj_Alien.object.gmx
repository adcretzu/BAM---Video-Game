<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Alien</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

dir = -1;
movespeed = 1.5;
grav = 0.2;
hsp = 0;
vsp = 0;
fearofheights = 0;

// Animation speed
image_speed = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Movement
hsp = dir * movespeed;
vsp += grav;

// Facing
if(dir &gt; 0) {
    image_xscale = 1;
}

else if( dir &lt; 0) {
    image_xscale = -1;
}

//Horizontal Collision
//Two sets of code for alien and wall collisions 
if(place_meeting(x+hsp,y,obj_Alien,))
{
    while(!place_meeting(x+sign(hsp),y,obj_Alien))

    {
        x += sign(hsp);
    }
    hsp =0;
    
     dir *= -1;
}
x += hsp;

if(place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall))
    {
        x += sign(hsp);
    }
    hsp =0;
    
    dir *= -1;
}
x += hsp;


//Vertical Collision
if (place_meeting(x,y+vsp,obj_ground))
{
    while(!place_meeting(x,y+sign(vsp),obj_ground))
    {
        y += sign(vsp);
    }
    vsp =0;
    //check to whether or not we have a collision with the floor or wall 
    //if (fearofheights)&amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+10, obj_wall,)  
    //  the first x cordinate is x plus half of the sprite times the direction
    // the very pixel in the way object moving 
    // plus eight makes it possible to walk off edges but pushes barrier slightly
      dir *= 1;
}

y += vsp;




//Enemy collision
if (place_meeting(x,y,obj_hero))
// if you collide with hero
{
    if (obj_hero.y &lt; y-16)
    // "if" you're colliding with the alien, are you colliding from the top?
    // is the player 16 pixels above us?
    {
        with (obj_hero) vsp = -jumpspeed;
        //now this is inside the hero object
        //will cause player to bounce
        instance_destroy();
        //will be destoryed upon impact, could cause damage or other
    }
    else
    //else= "otherwise" if you do not meet that object or command
    {
        game_restart();
    }
}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hero">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_angry_alien</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>82,49</point>
    <point>82,82</point>
  </PhysicsShapePoints>
</object>
